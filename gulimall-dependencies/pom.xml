<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--结构设计-->
    <!--对于微服务，父工程只做版本控制，对各个微服务中的依赖版本进行统一管理。没有 modules 节点。各个微服务可以单独打包。先父工程install，然后微服务各自install-->
    <!--对于微服务，父工程不适合聚合工程。聚合工程只能从聚合工程处打包，微服务不能单独打包。-->

    <modelVersion>4.0.0</modelVersion>

    <!--引用 Spring Boot的版本控制-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.13.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>org.lcm.gulimall</groupId>
    <artifactId>gulimall-dependencies</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>gulimall-dependencies</name>

    <!--pom聚合依赖，用在父级工程或聚合工程中, 不是jar包或者war包-->
    <packaging>pom</packaging>

    <!--版本控制 - 统一管理jar包版本-->
    <properties>
        <!--此项目工程的版本-->
        <gulimall-project.version>${project.version}</gulimall-project.version>

        <!--Maven编码-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--JDK版本-->
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!--Spring Boot-->
        <spring-boot.version>2.2.13.RELEASE</spring-boot.version>

        <!--spring-cloud Hoxton.SR9 版本适用于 Spring Boot >=2.2.0.RELEASE and <2.3.9.BUILD-SNAPSHOT-->
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>

        <!--spring-cloud-alibaba 2.2.x 版本适用于 Spring Boot 2.2.x-->
        <spring-cloud-alibaba.version>2.2.5.RELEASE</spring-cloud-alibaba.version>

        <!--Druid数据库连接池-->
        <druid.version>1.2.4</druid.version>

        <!--MyBatis数据库操作-->
        <mybatis.spring.boot.version>2.1.4</mybatis.spring.boot.version>

        <!--MySQL 数据库驱动 spring-boot-starter-dependencies有版本仲裁，不需要再引入-->
    </properties>

    <!--dependencyManagement-->
    <!--子模块继承之后，作用：(1)锁定版本,子模块不用写version (2)子模块不用写groupId-->
    <!--dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显式的声明需要用的依赖。
    如果不在子项目中声明依赖，是不会从父项目中继承下来的；
    只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且version和scope都读取自父pom;
    另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本
    -->
    <!--dependencies即使在子模块中不写该依赖项，那么子模块仍然会从父项目中继承该依赖项（全部继承）。-->

    <dependencyManagement>
        <dependencies>

            <!--Spring Boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--Spring Cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--Spring Cloud Alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--MySQL 数据库驱动 spring-boot-starter-dependencies有版本仲裁，不需要再引入-->

            <!--Druid数据库连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--MyBatis数据库操作-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>
